{"version":3,"sources":["store/orders/types.ts","store/orders/actions.ts","store/orders/selector.ts","pages/PizzaList/index.tsx","components/Header/index.tsx","pages/Orders/components/Cart.tsx","pages/Orders/components/OrderItem.tsx","pages/Orders/index.tsx","pages/Statistics/components/ListItemCustom.tsx","pages/Statistics/index.tsx","App.tsx","reportWebVitals.ts","store/orders/reducer.ts","store/pizza/reducer.ts","store/rootReducer.ts","store/index.ts","index.tsx"],"names":["EnumActionType","actionsOrders","payload","type","ADD_TO_CART","CONFIRM_TO_ORDERS","ordersList","state","orders","pizzaList","pizza","data","getInfoPizza","createSelector","order","listP","orderedPizza","map","el","flat","allIngredients","reducerCallback","acc","pizzas","reduce","popular","Object","keys","sort","a","b","splice","entries","item","ingredient","includes","push","pizzasIngredients","ingredients","useStyles","makeStyles","root","maxWidth","wrapper","marginTop","cardHeader","textAlign","PizzaList","classes","dispatch","useDispatch","history","useHistory","useSelector","keysPizzas","Grid","container","justify","spacing","className","xs","md","sm","Card","variant","CardHeader","title","Divider","CardContent","Typography","color","Box","ml","my","boxShadow","CardActions","Button","size","onClick","flexGrow","marginRight","navLink","textDecoration","navLinkActive","backgroundColor","padding","borderRadius","Header","AppBar","position","Toolbar","direction","activeClassName","exact","to","Cart","cart","length","index","Paper","elevation","py","mt","OrderItem","created","join","Intl","DateTimeFormat","format","Date","Orders","mb","id","ListItemCustom","indx","ListItem","ListItemText","disableTypography","primary","Statistics","alignItems","List","component","aria-label","borderColor","style","width","height","borderRight","display","App","CssBaseline","Container","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","cap","dough","tomato_sauce","onion","sausage","mushroom","cheese","onions","meat","king_one","mayo","tomato","dill","parsley","gavay","ananas","tonno","tuna","cappers","vegetarian","cucumber","rootReducer","combineReducers","action","newOrder","Math","random","toString","substr","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e4a5b3e2.chunk.js","sourcesContent":["import { Action } from 'redux'\r\n\r\nexport enum EnumActionType {\r\n  ADD_TO_CART = 'orders/ADD_TO_CART',\r\n  CONFIRM_TO_ORDERS = 'orders/SET_CONFIRM_TO_ORDERS',\r\n}\r\n\r\nexport interface IOrder {\r\n  id: string\r\n  created: Date\r\n  order: string[]\r\n}\r\nexport interface IOrdersState {\r\n  cart: string[]\r\n  orders: IOrder[]\r\n}\r\n\r\n// Action type\r\n\r\nexport interface ISetAddToCartAction extends Action<EnumActionType> {\r\n  type: EnumActionType.ADD_TO_CART\r\n  payload: string\r\n}\r\n\r\nexport interface ISetConfirmOrdersAction extends Action<EnumActionType> {\r\n  type: EnumActionType.CONFIRM_TO_ORDERS\r\n}\r\n\r\nexport type OrdersActionT = ISetAddToCartAction | ISetConfirmOrdersAction\r\n","import { EnumActionType, ISetAddToCartAction, ISetConfirmOrdersAction } from './types'\r\n\r\nexport const actionsOrders = {\r\n  addToCart: (payload: string): ISetAddToCartAction => ({\r\n    type: EnumActionType.ADD_TO_CART,\r\n    payload,\r\n  }),\r\n  confirmOrder: (): ISetConfirmOrdersAction => ({\r\n    type: EnumActionType.CONFIRM_TO_ORDERS,\r\n  }),\r\n}\r\n","import { createSelector } from 'reselect'\r\nimport { RootState } from '../rootReducer'\r\n\r\nexport const ordersList = (state: RootState) => state.orders.orders\r\nexport const pizzaList = (state: RootState) => state.pizza.data\r\n\r\nexport const getInfoPizza = createSelector(ordersList, pizzaList, (order, listP) => {\r\n  const orderedPizza = order.map((el) => [...el.order]).flat()\r\n\r\n  const allIngredients: string[] = []\r\n\r\n  const reducerCallback = (acc: any, el: any) => {\r\n    acc[el] = (acc[el] || 0) + 1\r\n    return acc\r\n  }\r\n\r\n  const pizzas = orderedPizza.reduce(reducerCallback, {})\r\n\r\n  const popular = Object.keys(pizzas).sort((a, b) => {\r\n    return pizzas[b] - pizzas[a]\r\n  })\r\n\r\n  popular.splice(5, 1)\r\n\r\n  Object.entries(listP).map((item) => {\r\n    const ingredient = Object.keys(item[1])\r\n    if (popular.includes(item[0])) {\r\n      return allIngredients.push(...ingredient)\r\n    } else {\r\n      return item\r\n    }\r\n  })\r\n\r\n  const pizzasIngredients = allIngredients.reduce(reducerCallback, {})\r\n\r\n  const ingredients = Object.keys(pizzasIngredients).sort((a, b) => {\r\n    return pizzasIngredients[b] - pizzasIngredients[a]\r\n  })\r\n\r\n  return { popular, ingredients }\r\n})\r\n","import React from 'react'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { Box } from '@material-ui/core'\r\n\r\nimport { actionsOrders } from '../../store/orders/actions'\r\nimport { pizzaList } from '../../store/orders/selector'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 460,\r\n  },\r\n  wrapper: {\r\n    marginTop: 20,\r\n  },\r\n  cardHeader: { textAlign: 'center' },\r\n})\r\n\r\nexport const PizzaList = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const pizzas: { [index: string]: any } = useSelector(pizzaList)\r\n  const keysPizzas = Object.keys(pizzas)\r\n\r\n  const onSendCart = (pizza: string) => {\r\n    dispatch(actionsOrders.addToCart(pizza))\r\n    history.push('/orders')\r\n  }\r\n\r\n  return (\r\n    <Grid container justify='center' spacing={3} className={classes.wrapper}>\r\n      {keysPizzas.map((el) => (\r\n        <Grid key={el} item xs={12} md={6} sm={6} className={classes.root}>\r\n          <Card variant='outlined'>\r\n            <CardHeader title={el} className={classes.cardHeader} />\r\n\r\n            <Divider />\r\n            <CardContent>\r\n              <Typography variant='h6' color='textSecondary'>\r\n                Ingredients:\r\n              </Typography>\r\n              <Divider />\r\n              <Grid container>\r\n                {Object.entries(pizzas[el]).map((item) => (\r\n                  <Grid item key={item[0]} xs={12} sm={6}>\r\n                    <Box ml={2} my={1} boxShadow={1}>\r\n                      <Typography variant='subtitle2'>\r\n                        {item[0]}: {item[1]}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n              <Divider />\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button color='primary' size='small' onClick={() => onSendCart(el)}>\r\n                add to cart\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    '& h6': {\r\n      marginRight: '10px',\r\n    },\r\n  },\r\n  navLink: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  navLinkActive: {\r\n    color: 'white',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    padding: '5px',\r\n    borderRadius: '7px',\r\n  },\r\n})\r\n\r\nexport function Header() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Grid container direction='row' spacing={4}>\r\n            <Grid item xs={10} className={classes.title}>\r\n              <Typography variant='h6'>\r\n                <NavLink\r\n                  activeClassName={classes.navLinkActive}\r\n                  className={classes.navLink}\r\n                  exact\r\n                  to='/'>\r\n                  Home\r\n                </NavLink>\r\n              </Typography>\r\n              <Typography variant='h6'>\r\n                <NavLink\r\n                  activeClassName={classes.navLinkActive}\r\n                  className={classes.navLink}\r\n                  to='/orders'>\r\n                  Orders\r\n                </NavLink>\r\n              </Typography>\r\n              <Typography variant='h6'>\r\n                <NavLink\r\n                  activeClassName={classes.navLinkActive}\r\n                  className={classes.navLink}\r\n                  to='/statistics'>\r\n                  Statistics\r\n                </NavLink>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport { RootState } from '../../../store/rootReducer'\r\nimport { actionsOrders } from '../../../store/orders/actions'\r\n\r\nexport const Cart = () => {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state: RootState) => state.orders.cart)\r\n\r\n  const onSendToConfirm = () => {\r\n    if (cart.length >= 1) {\r\n      dispatch(actionsOrders.confirmOrder())\r\n    }\r\n  }\r\n\r\n  if (cart.length < 1) {\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Box textAlign='center'>\r\n          <Typography variant='h6'>Cart is empty</Typography>\r\n        </Box>\r\n      </Grid>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Grid container item spacing={3}>\r\n        {cart.map((item, index) => (\r\n          <Grid item xs={12} sm={6} key={`${item}${index}`}>\r\n            <Paper elevation={14}>\r\n              <Box textAlign='center' py={1}>\r\n                <Typography variant='body1'>{item}</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Grid container item xs={12} justify='center'>\r\n        <Box mt={2}>\r\n          <Button color='primary' onClick={onSendToConfirm}>\r\n            Confirm\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Box } from '@material-ui/core'\r\n\r\nimport { IOrder } from '../../../store/orders/types'\r\n\r\ntype IProps = Omit<IOrder, 'id'>\r\n\r\nexport const OrderItem = ({ created, order }: IProps) => {\r\n  return (\r\n    <Grid item xs={12} sm={6}>\r\n      <Paper elevation={14}>\r\n        <Box ml={2} py={1}>\r\n          <Grid container>\r\n            <Grid item xs={6} sm={3}>\r\n              <Typography variant='h5'>Order:</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={9}>\r\n              <Typography variant='h6'>{order.join(', ')}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={6} sm={4}>\r\n              <Typography variant='h5'>Created:</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={8}>\r\n              <Typography variant='h6'>\r\n                {new Intl.DateTimeFormat('ua-UA').format(new Date(created))}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { Box } from '@material-ui/core'\r\n\r\nimport { Cart } from './components/Cart'\r\nimport { OrderItem } from './components/OrderItem'\r\nimport { ordersList } from '../../store/orders/selector'\r\n\r\nexport const Orders = () => {\r\n  const orders = useSelector(ordersList)\r\n\r\n  return (\r\n    <Grid container justify='center' spacing={3}>\r\n      <Grid container item xs={12}>\r\n        <Grid item xs={12}>\r\n          <Box mt={4} mb={2} textAlign='center'>\r\n            <Typography variant='h4'>Cart</Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Cart />\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Divider />\r\n      </Grid>\r\n      <Grid container item xs={12} spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Box textAlign='center'>\r\n            <Typography variant='h4'>Orders</Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={4}>\r\n          {orders.map((item) => (\r\n            <OrderItem order={item.order} created={item.created} key={item.id} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport const ListItemCustom = ({ indx, item }: { indx: number; item: string }) => (\r\n  <ListItem>\r\n    <ListItemText\r\n      disableTypography={true}\r\n      primary={<Typography variant='h6'>{`${indx + 1}) ${item}`}</Typography>}\r\n    />\r\n  </ListItem>\r\n)\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Box } from '@material-ui/core'\r\nimport List from '@material-ui/core/List'\r\n\r\nimport { getInfoPizza } from '../../store/orders/selector'\r\nimport { ListItemCustom } from './components/ListItemCustom'\r\n\r\nexport const Statistics = () => {\r\n  const { popular, ingredients } = useSelector(getInfoPizza)\r\n\r\n  if (popular.length < 1)\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Box textAlign='center'>\r\n          <Typography variant='h6'>Statistics is empty</Typography>\r\n        </Box>\r\n      </Grid>\r\n    )\r\n  return (\r\n    <Grid container alignItems='flex-start' spacing={3}>\r\n      <Grid container item xs={12} md={5}>\r\n        <Grid item xs={12}>\r\n          <Box mt={4} mb={2} textAlign='center'>\r\n            <Typography variant='h4'>Popular pizza</Typography>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <List component='ul' aria-label='popular'>\r\n            {popular.map((item, index) => (\r\n              <ListItemCustom key={item} indx={index} item={item} />\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} md={2}>\r\n        <Box\r\n          borderColor='primary.main'\r\n          style={{ width: '2rem', height: '100vh' }}\r\n          borderRight={1}\r\n          display={{ xs: 'none', md: 'block' }}\r\n        />\r\n      </Grid>\r\n      <Grid container item xs={12} md={5}>\r\n        <Grid item xs={12}>\r\n          <Box mt={4} mb={2} textAlign='center'>\r\n            <Typography variant='h4'>Ingredients</Typography>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <List component='ul' aria-label='ingredients'>\r\n            {ingredients.map((item, index) => (\r\n              <ListItemCustom key={item} indx={index} item={item} />\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport './App.css'\nimport { Container } from '@material-ui/core'\nimport { PizzaList } from './pages/PizzaList'\nimport { Route, Switch } from 'react-router-dom'\nimport { Header } from './components/Header'\nimport { Orders } from './pages/Orders'\nimport { Statistics } from './pages/Statistics'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <CssBaseline />\n      <Header />\n      <Container maxWidth='md'>\n        <Switch>\n          <Route exact path='/' component={PizzaList} />\n          <Route exact path='/orders' component={Orders} />\n          <Route exact path='/statistics' component={Statistics} />\n        </Switch>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { EnumActionType, IOrdersState, OrdersActionT } from './types'\r\n\r\nconst initialState: IOrdersState = {\r\n  cart: [],\r\n  orders: [],\r\n}\r\n\r\nexport const ordersReducer = (\r\n  state = initialState,\r\n  action: OrdersActionT\r\n): IOrdersState => {\r\n  switch (action.type) {\r\n    case EnumActionType.ADD_TO_CART:\r\n      return { ...state, cart: [...state.cart, action.payload] }\r\n    case EnumActionType.CONFIRM_TO_ORDERS:\r\n      if (state.cart.length > 0) {\r\n        let newOrder = {\r\n          id: Math.random().toString(36).substr(2, 9),\r\n          created: new Date(),\r\n          order: [...state.cart],\r\n        }\r\n        return {\r\n          ...state,\r\n          cart: [],\r\n          orders: [...state.orders, newOrder],\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  data: {\r\n    cap: {\r\n      dough: 1,\r\n      tomato_sauce: 1,\r\n      onion: 2,\r\n      sausage: 2,\r\n      mushroom: 3,\r\n      cheese: 1,\r\n    },\r\n    onions: {\r\n      dough: 1,\r\n      tomato_sauce: 1,\r\n      onion: 2,\r\n      meat: 1,\r\n      cheese: 1,\r\n    },\r\n    king_one: {\r\n      dough: 1,\r\n      tomato_sauce: 1,\r\n      onion: 2,\r\n      mayo: 1,\r\n      mushroom: 3,\r\n      tomato: 2,\r\n      cheese: 3,\r\n      dill: 2,\r\n      parsley: 2,\r\n    },\r\n    gavay: {\r\n      dough: 1,\r\n      tomato_sauce: 1,\r\n      onion: 2,\r\n      ananas: 1,\r\n      cheese: 2,\r\n    },\r\n    tonno: {\r\n      dough: 1,\r\n      tomato_sauce: 1,\r\n      tuna: 2,\r\n      cappers: 1,\r\n      cheese: 1,\r\n    },\r\n    vegetarian: {\r\n      dough: 1,\r\n      tomato_sauce: 1,\r\n      tomato: 2,\r\n      cappers: 1,\r\n      cucumber: 2,\r\n      onion: 2,\r\n      cheese: 1,\r\n    },\r\n  },\r\n}\r\n\r\nexport type PizzaStateType = typeof initialState\r\n\r\nexport const pizzaReducer = (state = initialState, action: any): PizzaStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { ordersReducer } from './orders/reducer'\r\nimport { IOrdersState } from './orders/types'\r\nimport { pizzaReducer, PizzaStateType } from './pizza/reducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  pizza: pizzaReducer,\r\n  orders: ordersReducer,\r\n})\r\n\r\nexport type RootState = {\r\n  pizza: PizzaStateType\r\n  orders: IOrdersState\r\n}\r\n","import { compose, createStore } from 'redux'\r\n\r\nimport { rootReducer } from './rootReducer'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers())\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename='ukrinsoft-test'>\n    <Provider store={store}>\n      <CssBaseline />\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}